// Generated by gencpp from file rt2_assignment1/RandomPosition.msg
// DO NOT EDIT!


#ifndef RT2_ASSIGNMENT1_MESSAGE_RANDOMPOSITION_H
#define RT2_ASSIGNMENT1_MESSAGE_RANDOMPOSITION_H

#include <ros/service_traits.h>


#include <rt2_assignment1/RandomPositionRequest.h>
#include <rt2_assignment1/RandomPositionResponse.h>


namespace rt2_assignment1
{

struct RandomPosition
{

typedef RandomPositionRequest Request;
typedef RandomPositionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RandomPosition
} // namespace rt2_assignment1


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rt2_assignment1::RandomPosition > {
  static const char* value()
  {
    return "48cc4bc3538e33f8f2e698bb201795d5";
  }

  static const char* value(const ::rt2_assignment1::RandomPosition&) { return value(); }
};

template<>
struct DataType< ::rt2_assignment1::RandomPosition > {
  static const char* value()
  {
    return "rt2_assignment1/RandomPosition";
  }

  static const char* value(const ::rt2_assignment1::RandomPosition&) { return value(); }
};


// service_traits::MD5Sum< ::rt2_assignment1::RandomPositionRequest> should match
// service_traits::MD5Sum< ::rt2_assignment1::RandomPosition >
template<>
struct MD5Sum< ::rt2_assignment1::RandomPositionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rt2_assignment1::RandomPosition >::value();
  }
  static const char* value(const ::rt2_assignment1::RandomPositionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rt2_assignment1::RandomPositionRequest> should match
// service_traits::DataType< ::rt2_assignment1::RandomPosition >
template<>
struct DataType< ::rt2_assignment1::RandomPositionRequest>
{
  static const char* value()
  {
    return DataType< ::rt2_assignment1::RandomPosition >::value();
  }
  static const char* value(const ::rt2_assignment1::RandomPositionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rt2_assignment1::RandomPositionResponse> should match
// service_traits::MD5Sum< ::rt2_assignment1::RandomPosition >
template<>
struct MD5Sum< ::rt2_assignment1::RandomPositionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rt2_assignment1::RandomPosition >::value();
  }
  static const char* value(const ::rt2_assignment1::RandomPositionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rt2_assignment1::RandomPositionResponse> should match
// service_traits::DataType< ::rt2_assignment1::RandomPosition >
template<>
struct DataType< ::rt2_assignment1::RandomPositionResponse>
{
  static const char* value()
  {
    return DataType< ::rt2_assignment1::RandomPosition >::value();
  }
  static const char* value(const ::rt2_assignment1::RandomPositionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RT2_ASSIGNMENT1_MESSAGE_RANDOMPOSITION_H
